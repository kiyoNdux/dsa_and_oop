/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.petadoption;

/**
 *
 * @author PC
 */

import com.petadoption.Pet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class PetAdoptationSystem extends javax.swing.JFrame {

    /**
     * Creates new form PetAdoptationSystem
     */
    
    private ArrayList<Pet> petList = new ArrayList<>();
    private DefaultTableModel adoptionModel;
    private ArrayList<AdoptionRecord> adoptionRecords = new ArrayList<>();
    private DefaultTableModel model;
    
    private void populatePetDropdown() {
        jComboBox2.removeAllItems(); // clear old items

        for (Pet pet : petList) {
            // Only include available pets
            if (pet.getStatus().equalsIgnoreCase("Available")) {
                jComboBox2.addItem(pet.getName());
            }
        }

        if (jComboBox2.getItemCount() > 0) {
            jComboBox2.setSelectedIndex(0);  // select first pet
        } else {
            jComboBox2.setSelectedIndex(-1); // nothing selected
            JOptionPane.showMessageDialog(this, "No available pets for adoption.", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }



    
    
    public PetAdoptationSystem() {
        try {

        javax.swing.UIManager.setLookAndFeel("javax.swing.plaf.nimbus.NimbusLookAndFeel");

        } catch (Exception ex) {
            System.err.println("Failed to set look and feel: " + ex);
        }

        setLookAndFeel();          // separate method for Nimbus
        initComponents();          // NetBeans autogenerated UI
        customizeUI();             // fonts, colors, table row heights
        initTableModels();         // initialize DefaultTableModels
        initDropdowns();           // populate combo boxes
        populatePetDropdown();     // fill available pets
        attachTableListeners();    // click listener for jTable1
        setHelpText();             // fill About/Help tab
        
//        
//        java.awt.Font font = new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 14);
//        this.setFont(font);
//
//        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", java.awt.Font.BOLD, 14));
//        jTable1.setFont(font);
//        jTable1.setRowHeight(24);
//        jTable2.setFont(font);
//        jTable2.setRowHeight(24);
//        
//        jButton2.setBackground(new java.awt.Color(76, 175, 80)); // Green for Add
//        jButton2.setForeground(java.awt.Color.WHITE);
//
//        jButton1.setBackground(new java.awt.Color(33, 150, 243)); // Blue for Edit
//        jButton1.setForeground(java.awt.Color.WHITE);
//
//        jButton3.setBackground(new java.awt.Color(244, 67, 54)); // Red for Delete
//        jButton3.setForeground(java.awt.Color.WHITE);
//
//        jButton4.setBackground(new java.awt.Color(158, 158, 158)); // Gray for Clear
//        jButton4.setForeground(java.awt.Color.WHITE);

        
        // Adoption table setup
        adoptionModel = new DefaultTableModel(new Object[] { "Adopter", "Contact", "Date", "Pet", "Notes" }, 0);
        jTable2 = new javax.swing.JTable(adoptionModel);
        javax.swing.JScrollPane adoptionScroll = new javax.swing.JScrollPane(jTable2);
        jPanel2.add(adoptionScroll);
        adoptionScroll.setBounds(250, 20, 400, 200); // adjust coordinates/sizing to match layout
        jTable2.setFillsViewportHeight(true);
        
        populatePetDropdown();
           
        // Add items to the combo box
        jComboBox1.removeAllItems(); // clear default items
        jComboBox1.addItem("Available");
        jComboBox1.addItem("Pending");
        jComboBox1.addItem("Adopted");
        jComboBox1.setSelectedItem("Available");


        // Initialize the table model (columns)
        model = new DefaultTableModel(new Object[]{"Name", "Type", "Age", "Status"}, 0);
        jTable1 = new javax.swing.JTable(model);
        javax.swing.JScrollPane scrollPane = new javax.swing.JScrollPane(jTable1);
        jPanel1.add(scrollPane);
        scrollPane.setBounds(250, 20, 400, 200);
        jTable1.setFillsViewportHeight(true);

        // Prefill text fields when row is clicked
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = jTable1.getSelectedRow();
                if (row >= 0) {
                    Pet pet = petList.get(row);
                    jTextField4.setText(pet.getName());
                    jTextField5.setText(pet.getType());
                    jTextField6.setText(String.valueOf(pet.getAge()));
                    jComboBox1.setSelectedItem(pet.getStatus());
                }
            }
        });
        
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Edit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Pet Name");

        jLabel2.setText("Type");

        jLabel3.setText("Age");

        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Clear");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jLabel4.setText("Status");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Type", "Age", "Status"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, 225, Short.MAX_VALUE)
                        .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.LEADING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(400, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(136, 136, 136))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 242, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Manage Pets", jPanel1);

        jLabel5.setText("Pet Name");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel6.setText("Adopter Name");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Contact Info");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel8.setText("Adoption Date");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel9.setText("Notes");

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jButton6.setText("Delete Record");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton5.setText("Add Record");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("Clear Fields");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pet Name", "Adopter Name", "Contact Info", "Adoptation Date", "Notes"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jComboBox2, 0, 225, Short.MAX_VALUE)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2)
                    .addComponent(jTextField3)
                    .addComponent(jTextField7))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(385, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton7)
                .addGap(184, 184, 184))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 180, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Adoption Records", jPanel2);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 878, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("About / Help", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 878, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Clear Fields Button
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        clearAdoptionForm();
    }//GEN-LAST:event_jButton7ActionPerformed

    // Delete Record Button
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable2.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a record to delete.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this record?", "Confirm Delete", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            adoptionRecords.remove(selectedRow);
            displayAdoptionRecords();
            JOptionPane.showMessageDialog(this, "Record deleted successfully.");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    // Add Record Button
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String adopterName = jTextField1.getText().trim();
        String contactInfo = jTextField2.getText().trim();
        String adoptionDate = jTextField3.getText().trim();
        String petName = (String) jComboBox2.getSelectedItem();
        String notes = jTextField7.getText().trim();

        // Input validation
        if (adopterName.isEmpty() || contactInfo.isEmpty() || adoptionDate.isEmpty() || petName == null) {
            JOptionPane.showMessageDialog(this, "Please fill in all required fields.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Check if selected pet is still available
        Pet selectedPet = null;
        for (Pet pet : petList) {
            if (pet.getName().equals(petName)) {
                selectedPet = pet;
                break;
            }
        }

        if (selectedPet == null) {
            JOptionPane.showMessageDialog(this, "Selected pet not found!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (selectedPet.isAdopted()) {
            JOptionPane.showMessageDialog(this, "This pet has already been adopted!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Mark pet as adopted
        selectedPet.setAdopted(true);
        selectedPet.setStatus("Adopted");

        // Create and store adoption record
        AdoptionRecord record = new AdoptionRecord(adopterName, contactInfo, adoptionDate, petName, notes);
        adoptionRecords.add(record);

        JOptionPane.showMessageDialog(this, "Adoption record added successfully!");

        // Refresh UI elements
        displayAdoptionRecords();
        displayPets();           // Update pet table to show new status
        populatePetDropdown();   // Remove adopted pet from dropdown
        clearAdoptionForm();
    }//GEN-LAST:event_jButton5ActionPerformed

    // Notes
    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    // Adoption Date
    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    // Contact Info
    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    // Adopter Name
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    // Pet Name Dropdown
    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    // Clear Button
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        jTextField1.setText("");  
        jTextField2.setText("");  
        jTextField3.setText("");  
        jTextField4.setText("");  
        jTextField5.setText("");  
        jTextField6.setText("");  

        // Reset status combo box
        jComboBox1.setSelectedIndex(-1); 

        // Unselect any selected row in the table
        jTable1.clearSelection();

        // Clear all rows from the JTable
        model.setRowCount(0);

        // Clear the pet list to keep backend data consistent
        petList.clear();

        // Refresh the dropdown in the Adoption tab
        populatePetDropdown();

        // Confirmation
        JOptionPane.showMessageDialog(this, "All pet records have been cleared!");
    }//GEN-LAST:event_jButton4ActionPerformed

    // Delete Button
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRow = getSelectedRowIndex();
        if (selectedRow == -1) return;

        petList.remove(selectedRow);
        JOptionPane.showMessageDialog(this, "Pet deleted successfully!");
        displayPets();
        populatePetDropdown();
    }//GEN-LAST:event_jButton3ActionPerformed

    // Add Button
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            // TODO add your handling code here:
        try {
            String name = jTextField4.getText().trim();
            String type = jTextField5.getText().trim();
            String status = (String) jComboBox1.getSelectedItem();
            int age = Integer.parseInt(jTextField6.getText().trim());

            // Input validation
            if (name.isEmpty() || type.isEmpty() || status.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill all fields!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (age < 0 || age > 30) {
                JOptionPane.showMessageDialog(this, "Age must be between 0 and 30!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Capitalize first letter of name/type
            name = name.substring(0, 1).toUpperCase() + name.substring(1).toLowerCase();
            type = type.substring(0, 1).toUpperCase() + type.substring(1).toLowerCase();

            // Create new Pet based on type
            Pet pet;
            if (type.equalsIgnoreCase("Dog")) {
                pet = new Dog(name, age);
            } else if (type.equalsIgnoreCase("Cat")) {
                pet = new Cat(name, age);
            } else {
                pet = new Pet(name, type, age);
            }

            pet.setStatus(status);
            pet.setAdopted(false);

            petList.add(pet);
            JOptionPane.showMessageDialog(this, "Pet added successfully!");
            displayPets();
            clearFields();
            populatePetDropdown();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Age must be a number!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    // Edit Button
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        int selectedRow = getSelectedRowIndex();
        if (selectedRow == -1) return; // no row selected

        try {
            String name = jTextField4.getText().trim();
            String type = jTextField5.getText().trim();
            String status = (String) jComboBox1.getSelectedItem();
            int age = Integer.parseInt(jTextField6.getText().trim());

            if (name.isEmpty() || type.isEmpty() || status.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill all fields!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (age < 0 || age > 30) {
                JOptionPane.showMessageDialog(this, "Age must be between 0 and 30!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Capitalize first letter
            name = name.substring(0, 1).toUpperCase() + name.substring(1).toLowerCase();
            type = type.substring(0, 1).toUpperCase() + type.substring(1).toLowerCase();

            Pet pet = petList.get(selectedRow);
            pet.setName(name);
            pet.setType(type);
            pet.setAge(age);
            pet.setStatus(status);

            JOptionPane.showMessageDialog(this, "Pet updated successfully!");
            displayPets();
            clearFields();
            populatePetDropdown();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Age must be a number!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

//GEN-FIRST:event_jButton1ActionPerformed
 
//GEN-LAST:event_jButton1ActionPerformed

    // Helper Methods for Manage Pets
    
    private void displayPets() {
        model.setRowCount(0); // Clear table
        for (Pet p : petList) {
            model.addRow(new Object[]{p.getName(), p.getType(), p.getAge(), p.getStatus()});
        }
    }
    
    private void clearFields() {
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jComboBox1.setSelectedIndex(0);
    }
    
    private void initPetStatusDropdown() {
        jComboBox1.removeAllItems();
        jComboBox1.addItem("Available");
        jComboBox1.addItem("Pending");
        jComboBox1.addItem("Adopted");
        jComboBox1.setSelectedItem("Available");
    }

    
    
    // Helper Methods for Adoptation Records
    
    private void clearAdoptionForm() {
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField7.setText("");
        jComboBox2.setSelectedIndex(-1);
    }

    private void displayAdoptionRecords() {
        adoptionModel.setRowCount(0);
        for (AdoptionRecord r : adoptionRecords) {
            adoptionModel.addRow(new Object[] {
                r.getAdopterName(),
                r.getContactInfo(),
                r.getAdoptionDate(),
                r.getPetName(),
                r.getNotes()
            });
        }
    }

    
    // Helper Method for Design
    
    private void setLookAndFeel() {
        try {
            javax.swing.UIManager.setLookAndFeel("javax.swing.plaf.nimbus.NimbusLookAndFeel");
        } catch (Exception ex) {
            System.err.println("Failed to set look and feel: " + ex);
        }
    }
    
    private void customizeUI() {
        java.awt.Font font = new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 14);
        this.setFont(font);

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", java.awt.Font.BOLD, 14));

        jTable1.setFont(font); jTable1.setRowHeight(24);
        jTable2.setFont(font); jTable2.setRowHeight(24);

        jButton2.setBackground(new java.awt.Color(76, 175, 80)); jButton2.setForeground(java.awt.Color.WHITE); // Add
        jButton1.setBackground(new java.awt.Color(33, 150, 243)); jButton1.setForeground(java.awt.Color.WHITE); // Edit
        jButton3.setBackground(new java.awt.Color(244, 67, 54)); jButton3.setForeground(java.awt.Color.WHITE); // Delete
        jButton4.setBackground(new java.awt.Color(158, 158, 158)); jButton4.setForeground(java.awt.Color.WHITE); // Clear
    }
    
    private void initTableModels() {
        // Pet table
        model = new DefaultTableModel(new Object[]{"Name", "Type", "Age", "Status"}, 0);
        jTable1.setModel(model);

        // Adoption table
        adoptionModel = new DefaultTableModel(new Object[]{"Adopter", "Contact", "Date", "Pet", "Notes"}, 0);
        jTable2.setModel(adoptionModel);
    }
    
    private void initDropdowns() {
        // Status dropdown
        jComboBox1.removeAllItems();
        jComboBox1.addItem("Available");
        jComboBox1.addItem("Pending");
        jComboBox1.addItem("Adopted");
        jComboBox1.setSelectedItem("Available");

        // Adoption pet dropdown is filled dynamically
        populatePetDropdown();
    }

    private void attachTableListeners() {
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = jTable1.getSelectedRow();
                if (row >= 0) {
                    Pet pet = petList.get(row);
                    jTextField4.setText(pet.getName());
                    jTextField5.setText(pet.getType());
                    jTextField6.setText(String.valueOf(pet.getAge()));
                    jComboBox1.setSelectedItem(pet.getStatus());
                }
            }
        });
    }
    
    
    private void setHelpText() {
        String helpText = """
    🐾 PET ADOPTION MANAGEMENT SYSTEM
    Version: 1.0
    Developer: RM Villa

    📘 About
    This system allows users to manage pets and record adoptions efficiently.

    You can:
    • Add, edit, or delete pets and set their availability status.
    • Record adoptions that automatically update pet status to "Adopted".
    • View adoption history with adopter details and notes.

    💡 How to Use
    1. Manage Pets Tab
       - Add new pets with name, type, and age.
       - Edit or delete pet entries.
       - Only pets with status "Available" can be adopted.

    2. Adoption Records Tab
       - Record adoptions for available pets.
       - Adopted pets will no longer appear in the dropdown.

    3. About / Help Tab
       - Displays usage instructions and credits.

    🧭 Tips
    • Use clear pet names and consistent types (Dog, Cat, etc.).
    • Double-check adopter info before saving a record.
    • You can edit or delete adoption records anytime.

    💬 Support
    For bugs or suggestions, contact: support@petadopt.com
    """;

        jTextArea1.setText(helpText);
    }




    




    private int getSelectedRowIndex() {
        for (java.awt.Component comp : jPanel1.getComponents()) {
            if (comp instanceof javax.swing.JScrollPane) {
                javax.swing.JScrollPane scrollPane = (javax.swing.JScrollPane) comp;
                javax.swing.JViewport viewport = scrollPane.getViewport();
                if (viewport.getView() instanceof javax.swing.JTable) {
                    javax.swing.JTable table = (javax.swing.JTable) viewport.getView();
                    int row = table.getSelectedRow();
                    if (row == -1) {
                        JOptionPane.showMessageDialog(this, "Please select a row first!");
                    }
                    return row;
                }
            }
        }
        return -1;
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PetAdoptationSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PetAdoptationSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PetAdoptationSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PetAdoptationSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PetAdoptationSystem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables
}
